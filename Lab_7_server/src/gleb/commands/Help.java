package gleb.commands;

import gleb.server.VehicleList;

/**
 * Класс команды help
 */
public class Help extends Command {

	/**
	 * Метод выполнения команды
	 */
	@Override
	public void execute(VehicleList vehicleList, String data, String userCreator) {
		answer = "help : вывести справку по доступным командам\n" +
				"info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\n" +
				"show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\n" +
				"add {element} : добавить новый элемент в коллекцию\n" +
				"update {id} {element} : обновить значение элемента коллекции, id которого равен заданному\n" +
				"remove_by_id {id} : удалить элемент из коллекции по его id\n" +
				"clear : очистить коллекцию\n" +
				"save : сохранить коллекцию в файл\n" +
				"execute_script {file_name} : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\n" +
				"exit : завершить программу (без сохранения в файл)\n" +
				"add_if_max {element} : добавить новый элемент в коллекцию, если его значение превышает значение наибольшего элемента этой коллекции\n" +
				"remove_greater {element} : удалить из коллекции все элементы, превышающие заданный\n" +
				"remove_lower {element} : удалить из коллекции все элементы, меньшие, чем заданный\n" +
				"group_counting_by_number_of_wheels : сгруппировать элементы коллекции по значению поля numberOfWheels, вывести количество элементов в каждой группе\n" +
				"filter_greater_than_type {type} {number} : вывести элементы, значение поля type которых больше заданного\n" +
				"print_field_ascending_number_of_wheels : вывести значения поля numberOfWheels в порядке возрастания";
	}
}
